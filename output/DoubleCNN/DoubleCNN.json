{
    "structure": [
        {
            "type": "RevIN",
            "params": {
                "training": "False",
                "eps": "1e-05",
                "num_features": "7",
                "mean": "tensor([[[-0.1027]]])",
                "std": "tensor([[[0.9640]]])"
            },
            "has_weight": false,
            "has_bias": false,
            "source": "class RevIN(nn.Module):\n    def __init__(self, num_features, eps=1e-5):\n        super(RevIN, self)._...",
            "name": "revin"
        },
        {
            "type": "Conv1d",
            "params": {
                "training": "False",
                "in_channels": "7",
                "out_channels": "7",
                "transposed": "False",
                "groups": "1",
                "padding_mode": "zeros"
            },
            "has_weight": true,
            "has_bias": true,
            "source": "class Conv1d(_ConvNd):\n    __doc__ = (\n        r\"\"\"Applies a 1D convolution over an input signal com...",
            "name": "time_cnn"
        },
        {
            "type": "GELU",
            "params": {
                "training": "False",
                "approximate": "none"
            },
            "has_weight": false,
            "has_bias": false,
            "source": "class GELU(Module):\n    r\"\"\"Applies the Gaussian Error Linear Units function.\n\n    .. math:: \\text{G...",
            "name": "time_cnn_GELU"
        },
        {
            "type": "Conv1d",
            "params": {
                "training": "False",
                "in_channels": "96",
                "out_channels": "96",
                "transposed": "False",
                "groups": "1",
                "padding_mode": "zeros"
            },
            "has_weight": true,
            "has_bias": true,
            "source": "class Conv1d(_ConvNd):\n    __doc__ = (\n        r\"\"\"Applies a 1D convolution over an input signal com...",
            "name": "variable_cnn"
        },
        {
            "type": "GELU",
            "params": {
                "training": "False",
                "approximate": "none"
            },
            "has_weight": false,
            "has_bias": false,
            "source": "class GELU(Module):\n    r\"\"\"Applies the Gaussian Error Linear Units function.\n\n    .. math:: \\text{G...",
            "name": "variable_cnn_GELU"
        },
        {
            "type": "Sequential",
            "params": {
                "training": "False"
            },
            "has_weight": false,
            "has_bias": false,
            "source": "class Sequential(Module):\n    r\"\"\"A sequential container.\n\n    Modules will be added to it in the or...",
            "name": "mlp",
            "submodules": [
                "mlp.0",
                "mlp.1",
                "mlp.2",
                "mlp.3",
                "mlp.4"
            ]
        },
        {
            "type": "Linear",
            "params": {
                "training": "False",
                "in_features": "1344",
                "out_features": "512"
            },
            "has_weight": true,
            "has_bias": true,
            "source": "class Linear(Module):\n    r\"\"\"Applies an affine linear transformation to the incoming data: :math:`y...",
            "name": "mlp.0"
        },
        {
            "type": "GELU",
            "params": {
                "training": "False",
                "approximate": "none"
            },
            "has_weight": false,
            "has_bias": false,
            "source": "class GELU(Module):\n    r\"\"\"Applies the Gaussian Error Linear Units function.\n\n    .. math:: \\text{G...",
            "name": "mlp.1"
        },
        {
            "type": "Linear",
            "params": {
                "training": "False",
                "in_features": "512",
                "out_features": "256"
            },
            "has_weight": true,
            "has_bias": true,
            "source": "class Linear(Module):\n    r\"\"\"Applies an affine linear transformation to the incoming data: :math:`y...",
            "name": "mlp.2"
        },
        {
            "type": "GELU",
            "params": {
                "training": "False",
                "approximate": "none"
            },
            "has_weight": false,
            "has_bias": false,
            "source": "class GELU(Module):\n    r\"\"\"Applies the Gaussian Error Linear Units function.\n\n    .. math:: \\text{G...",
            "name": "mlp.3"
        },
        {
            "type": "Linear",
            "params": {
                "training": "False",
                "in_features": "256",
                "out_features": "672"
            },
            "has_weight": true,
            "has_bias": true,
            "source": "class Linear(Module):\n    r\"\"\"Applies an affine linear transformation to the incoming data: :math:`y...",
            "name": "mlp.4"
        }
    ],
    "connections": [
        {
            "source": "time_cnn",
            "target": "time_cnn_GELU",
            "type": "normal"
        },
        {
            "source": "time_cnn_GELU",
            "target": "size",
            "type": "normal"
        },
        {
            "source": "time_cnn_GELU",
            "target": "view",
            "type": "normal"
        },
        {
            "source": "variable_cnn",
            "target": "variable_cnn_GELU",
            "type": "normal"
        },
        {
            "source": "variable_cnn_GELU",
            "target": "size",
            "type": "normal"
        },
        {
            "source": "variable_cnn_GELU",
            "target": "view",
            "type": "normal"
        },
        {
            "source": "size",
            "target": "view",
            "type": "normal"
        },
        {
            "source": "view",
            "target": "<built-in function mul>",
            "type": "normal"
        },
        {
            "source": "<built-in method cat of type object at 0x00007FFAC3B57450>",
            "target": "mlp.0",
            "type": "normal"
        },
        {
            "source": "<built-in function mul>",
            "target": "<built-in function add>",
            "type": "normal"
        },
        {
            "source": "<built-in function add>",
            "target": "permute",
            "type": "normal"
        },
        {
            "source": "permute",
            "target": "output",
            "type": "output"
        },
        {
            "source": "mask",
            "target": "time_cnn",
            "type": "normal"
        },
        {
            "source": "x_enc_1",
            "target": "variable_cnn",
            "type": "normal"
        },
        {
            "source": "mlp.0",
            "target": "mlp.1",
            "type": "normal"
        },
        {
            "source": "mlp.1",
            "target": "mlp.2",
            "type": "normal"
        },
        {
            "source": "mlp.2",
            "target": "mlp.3",
            "type": "normal"
        },
        {
            "source": "mlp.3",
            "target": "mlp.4",
            "type": "normal"
        },
        {
            "source": "mlp.4",
            "target": "size",
            "type": "normal"
        },
        {
            "source": "mlp.4",
            "target": "view",
            "type": "normal"
        },
        {
            "source": "x_mark_enc_1",
            "target": "<built-in function mul>",
            "type": "normal"
        },
        {
            "source": "x_dec_1",
            "target": "<built-in function add>",
            "type": "normal"
        }
    ],
    "inputs": [
        "x_enc_1",
        "x_mark_enc_1",
        "x_dec_1",
        "x_mark_dec_1",
        "mask"
    ]
}